// <auto-generated />
using System;
using CapstoneApi.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace CapstoneApi.Migrations
{
    [DbContext(typeof(CapstoneContext))]
    [Migration("20181205124739_AddUserEventRelationship")]
    partial class AddUserEventRelationship
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.SerialColumn)
                .HasAnnotation("ProductVersion", "2.1.4-rtm-31024")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("CapstoneApi.Models.Event", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("Capacity");

                    b.Property<Guid?>("CreatedById");

                    b.Property<string>("Description");

                    b.Property<DateTime>("End");

                    b.Property<string>("ImageExtension");

                    b.Property<Guid>("ImageId");

                    b.Property<string>("Name");

                    b.Property<DateTime>("Start");

                    b.HasKey("Id");

                    b.HasIndex("CreatedById");

                    b.ToTable("Events");
                });

            modelBuilder.Entity("CapstoneApi.Models.PrimaryContact", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("EmailAddress");

                    b.Property<string>("Name");

                    b.Property<string>("PhoneNumber");

                    b.HasKey("Id");

                    b.ToTable("PrimaryContacts");
                });

            modelBuilder.Entity("CapstoneApi.Models.Registrant", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Registrants");
                });

            modelBuilder.Entity("CapstoneApi.Models.Registration", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid?>("EventId");

                    b.Property<bool>("HasPhotoRelease");

                    b.Property<bool>("IsWaitList");

                    b.Property<Guid?>("PrimaryContactId");

                    b.Property<Guid?>("RegistrantId");

                    b.HasKey("Id");

                    b.HasIndex("EventId");

                    b.HasIndex("PrimaryContactId");

                    b.HasIndex("RegistrantId");

                    b.ToTable("Registrations");
                });

            modelBuilder.Entity("CapstoneApi.Models.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Email");

                    b.Property<bool>("IsAdmin");

                    b.Property<byte[]>("PasswordHash");

                    b.Property<byte[]>("PasswordSalt");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("CapstoneApi.Models.Event", b =>
                {
                    b.HasOne("CapstoneApi.Models.User", "CreatedBy")
                        .WithMany("Events")
                        .HasForeignKey("CreatedById")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("CapstoneApi.Models.Registration", b =>
                {
                    b.HasOne("CapstoneApi.Models.Event", "Event")
                        .WithMany("Registrations")
                        .HasForeignKey("EventId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("CapstoneApi.Models.PrimaryContact", "PrimaryContact")
                        .WithMany("Registrations")
                        .HasForeignKey("PrimaryContactId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("CapstoneApi.Models.Registrant", "Registrant")
                        .WithMany("Registrations")
                        .HasForeignKey("RegistrantId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
